//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTest.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpcomingEventShortDTO", Namespace="http://schemas.datacontract.org/2004/07/Service_Solution.DTO_Models")]
    [System.SerializableAttribute()]
    public partial class UpcomingEventShortDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndTimeField, value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartTimeField, value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDB_Service")]
    public interface IDB_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB_Service/FetchUpcomingEvents", ReplyAction="http://tempuri.org/IDB_Service/FetchUpcomingEventsResponse")]
        Service_Solution.DTO_Models.UpcomingEventDTO[] FetchUpcomingEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB_Service/FetchUpcomingEvents", ReplyAction="http://tempuri.org/IDB_Service/FetchUpcomingEventsResponse")]
        System.Threading.Tasks.Task<Service_Solution.DTO_Models.UpcomingEventDTO[]> FetchUpcomingEventsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB_Service/FetchUpcomingEventsShort", ReplyAction="http://tempuri.org/IDB_Service/FetchUpcomingEventsShortResponse")]
        ConsoleTest.ServiceReference1.UpcomingEventShortDTO[] FetchUpcomingEventsShort();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDB_Service/FetchUpcomingEventsShort", ReplyAction="http://tempuri.org/IDB_Service/FetchUpcomingEventsShortResponse")]
        System.Threading.Tasks.Task<ConsoleTest.ServiceReference1.UpcomingEventShortDTO[]> FetchUpcomingEventsShortAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDB_ServiceChannel : ConsoleTest.ServiceReference1.IDB_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DB_ServiceClient : System.ServiceModel.ClientBase<ConsoleTest.ServiceReference1.IDB_Service>, ConsoleTest.ServiceReference1.IDB_Service {
        
        public DB_ServiceClient() {
        }
        
        public DB_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DB_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DB_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DB_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Service_Solution.DTO_Models.UpcomingEventDTO[] FetchUpcomingEvents() {
            return base.Channel.FetchUpcomingEvents();
        }
        
        public System.Threading.Tasks.Task<Service_Solution.DTO_Models.UpcomingEventDTO[]> FetchUpcomingEventsAsync() {
            return base.Channel.FetchUpcomingEventsAsync();
        }
        
        public ConsoleTest.ServiceReference1.UpcomingEventShortDTO[] FetchUpcomingEventsShort() {
            return base.Channel.FetchUpcomingEventsShort();
        }
        
        public System.Threading.Tasks.Task<ConsoleTest.ServiceReference1.UpcomingEventShortDTO[]> FetchUpcomingEventsShortAsync() {
            return base.Channel.FetchUpcomingEventsShortAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IClientAccessPolicy")]
    public interface IClientAccessPolicy {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientAccessPolicy/GetClientAccessPolicy", ReplyAction="http://tempuri.org/IClientAccessPolicy/GetClientAccessPolicyResponse")]
        System.IO.Stream GetClientAccessPolicy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientAccessPolicy/GetClientAccessPolicy", ReplyAction="http://tempuri.org/IClientAccessPolicy/GetClientAccessPolicyResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetClientAccessPolicyAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientAccessPolicyChannel : ConsoleTest.ServiceReference1.IClientAccessPolicy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientAccessPolicyClient : System.ServiceModel.ClientBase<ConsoleTest.ServiceReference1.IClientAccessPolicy>, ConsoleTest.ServiceReference1.IClientAccessPolicy {
        
        public ClientAccessPolicyClient() {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccessPolicyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream GetClientAccessPolicy() {
            return base.Channel.GetClientAccessPolicy();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetClientAccessPolicyAsync() {
            return base.Channel.GetClientAccessPolicyAsync();
        }
    }
}
